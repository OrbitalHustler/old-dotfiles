#!/usr/bin/env bash

if [ ! -f ~/.gitconfig ]; then
    touch ~/.gitconfig
fi
cp -p ~/.gitconfig ~/.gitconfig.bkp.tmp


{{- if .name }}
git config --global user.name "{{ .name }}"
{{- end}}
{{- if .email }}
git config --global user.email "{{ .email }}"
{{- end}}
{{- if .github_user }}
git config --global user.email "{{ .github_user }}"
{{- end}}

git config --global core.excludesfile '~/.gitignore_global'
git config --global core.editor '~/.bin/editor'
git config --global core.whitespace trailing-space,space-before-tab

git config --global push.default current
git config --global push.followTags true

git config --global alias.unadd 'reset HEAD'
git config --global alias.undo-commit 'reset --soft HEAD^'
git config --global alias.ec 'config --global -e' # edit gitconfig
git config --global alias.ls 'log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate' # List commits in short form, with colors and branch/tag annotations.
git config --global alias.ll 'log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat' # List commits showing changed files
git config --global alias.lds 'log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short' # List oneline commits showing dates
git config --global alias.ld 'log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative' # List oneline commits showing relative dates
git config --global alias.le 'log --oneline --decorate' #Default look for short git log
git config --global alias.logtree '""log --graph --oneline --decorate --all""' # same as above, but with graph
git config --global alias.filelog 'log -u' # See all the commits related to a file, with the diff of the changes with git log -u
git config --global alias.dl '!git ll -1' # Show modified files in last commit
git config --global alias.dlc 'diff --cached HEAD^' # Show a diff last commit

# Not working cause a bunch of '\' are added in the final .gitignore
#git config --global alias.dr "!f() { git diff "$1"^.."$1"; }; f" # Show content (full diff) of a commit given a revision
#git config --global alias.lc "!f() { git ll "$1"^.."$1"; }; f" # ^
#git config --global alias.diffr '"!f() { git diff "$1"^.."$1"; }; f"' # ^
#git config --global alias.dsf '"!f() { [ \"$GIT_PREFIX\" != \"\" ] && cd "$GIT_PREFIX"; git diff --color $@ | diff-so-fancy | less --tabs=4 -RFX; }; f"'

git config --global alias.la '!git config -l | grep alias | cut -c 7-' # List all your aliases
git config --global alias.permission-reset '!git diff -p -R | grep -E "^(diff|(old|new) mode)" | git apply'
git config --global alias.co checkout
git config --global alias.br branch
git config --global alias.ci commit
git config --global alias.st status
git config --global alias.last 'log -1 HEAD'
git config --global alias.web 'instaweb --httpd=webrick'
git config --global alias.webstop 'instaweb --httpd=webrick --stop'
git config --global alias.git '!exec git'
git config --global alias.pushall '!git remote | xargs -L1 git push --all'

git config --global filter.gitignore.clean "sed '/#gitignore$/'d"
git config --global filter.gitignore.smudge cat

git config --global grep.extendRegexp true
git config --global grep.lineNumber true

git config --global color.diff-highlight.oldNormal "red bold"
git config --global color.diff-highlight.oldHighlight "red bold 52"
git config --global color.diff-highlight.newNormal "green bold"
git config --global color.diff-highlight.newHighlight "green bold 52"

git config --global stash.showPatch true

git config --global log.decorate true

git config --global merge.conflictstyle diff3
git config --global merge.stat true

git config --global status.showUntrackedFiles all

git config --global commit.verbose true
git config --global commit.template ~/.gittemplates/commit

git config --global advice.pushNonFastForward false
git config --global advice.statusHints false

git config --global diff.rename copies
git config --global diff.mnemonicprefix true

git config --global diff.hex.textconv "hexdump -v -C"

git config --global diff.zip.textconv "unzip -v"

git config --global diff.pdf.textconv "mdls"

git config --global diff.bin.textconv "hexdump -v -C"

git config --global flake8.strict true

git config --global filter.lfs.process "git-lfs filter-process"
git config --global filter.lfs.required true
git config --global filter.lfs.clean "git-lfs clean -- %f"
git config --global filter.lfs.smudge "git-lfs smudge -- %f"

git config --global init.templatedir '~/.gittemplates'
git config --global init.defaultBranch main

git config --global pull.rebase true

git config --global interactive.diffFilter "delta --color-only"

git config --global rerere.enabled true

cat ~/.gitconfig
mv -f ~/.gitconfig.bkp.tmp ~/.gitconfig
